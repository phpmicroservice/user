<?php

namespace app\controller;

/**
 * 好友的控制器 friend
 * Class FriendController
 * @package app\controller
 */
class Friend extends \core\CoreController
{
    /**
     * 初始化
     */
    public function initialize()
    {
        parent::initialize(); //TODO: Change the autogenerated stub
    }

    /**
     * 好友申请
     */
    public function add_apply()
    {
        $data = $this->getData([
            'user_id2' => ['post', 'user_id2', 'int', 0],
            'reason' => ['post', 'reason', 'string', 0],
        ]);
        $service = new \app\logic\Friend();
        $re = $service->add_apply($this->user_id, $data);
        return $this->send($re);
    }

    /**
     * 好友设置
     * @return \Phalcon\Http\Response|\Phalcon\Http\ResponseInterface
     */
    public function friend_set()
    {
        $user_id = $this->request->get('user_id', 'int', 0);
        $field = $this->request->get('field', 'string', 0);
        $value = $this->request->get('value', 'int', 0);
        $service = new \app\logic\Friend();
        $re = $service->friend_set($this->user_id, $user_id, $field, $value);
        return $this->send($re);
    }

    /**
     * 好友设置信息
     * @return \Phalcon\Http\Response|\Phalcon\Http\ResponseInterface
     */
    public function friend_set_info()
    {
        $user_id = $this->request->get('user_id', 'int', 0);
        $service = new \app\logic\Friend();
        $re = $service->friend_set_info($this->user_id, $user_id);
        return $this->send($re);
    }

    /**
     * 加好友方式
     */
    public function add_friend_type()
    {
        $user_id2 = $this->request->get('user_id2', 'int', 0);
        $service = new \app\logic\Friend();
        $re = $service->get_add_friend_type($this->user_id, $user_id2);
        return $this->send($re);
    }

    /**
     * 删除好友
     */
    public function del_friend()
    {
        $user_id = $this->request->get('user_id', 'int', 0);
        $service = new \app\logic\Friend();
        $re = $service->del_friend($this->user_id, $user_id);
        return $this->send($re);
    }

    /**
     * 验证 通过
     * @return \Phalcon\Http\Response|\Phalcon\Http\ResponseInterface
     */
    public function apply_ok()
    {
        $id = $this->request->get('id', 'int', 0);
        $from_user_id = $this->request->get('from_user_id', 'int', 0);
        $service = new \app\logic\Friend();
        $re = $service->apply_ok($this->user_id, $id, $from_user_id);
        return $this->send($re);
    }

    /**
     * 增加好友
     * @return \Phalcon\Http\Response|\Phalcon\Http\ResponseInterface
     */
    public function add_friend()
    {
        $data = $this->getData([
            'user_id2' => ['post', 'user_id2', 'int', 0]
        ]);
        $service = new \app\logic\Friend();
        $re = $service->add_friend($this->user_id, $data['user_id2']);
        return $this->send($re);
    }

    /**
     * 审核不通过
     * @return \Phalcon\Http\Response|\Phalcon\Http\ResponseInterface
     */
    public function apply_no()
    {
        $id = $this->request->get('id', 'int', 0);
        $service = new \app\logic\Friend();
        $re = $service->apply_no($this->user_id, $id);
        return $this->send($re);
    }

    /**
     * 我发起的申请列表
     * @return \Phalcon\Http\Response|\Phalcon\Http\ResponseInterface
     */
    public function apply_list()
    {
        $page = $this->request->get('p', 'int', 1);
        $status = $this->request->get('status', 'int', 0);
        $service = new \app\logic\Friend();
        $re = $service->apply_list([
            'user_id' => $this->user_id,
            'status' => $status
        ], $page);
        return $this->send($re);
    }

    /**
     * 申请加我的列表
     * @return \Phalcon\Http\Response|\Phalcon\Http\ResponseInterface
     */
    public function apply_list2()
    {
        $page = $this->request->get('p', 'int', 1);
        $status = $this->request->get('status', 'int', 0);
        $service = new \app\logic\Friend();
        $re = $service->apply_list([
            'user_id2' => $this->user_id,
            'status' => $status
        ], $page);
        return $this->send($re);
    }

    /**
     * 好友列表
     * @return \Phalcon\Http\Response|\Phalcon\Http\ResponseInterface
     */
    public function listf()
    {
        $page = $this->request->get('p', 'int', 1);
        $service = new \app\logic\Friend();
        $re = $service->listf([
            'user_id' => $this->user_id
        ], $page);
        return $this->send($re);
    }

}